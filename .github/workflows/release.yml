name: Release

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Ref to build (for Pull Requests, use refs/pull/NNN/head)'
        required: true
  release:
    types:
    - published
  schedule:
  - cron: '0 5 * * *'

jobs:
  latest-ref:
    name: Get latest nightly ref
    if: github.event_name == 'schedule'

    runs-on: ubuntu-latest

    outputs:
      latest_ref: ${{ steps.latest_ref.outputs.latest_ref }}

    steps:
    - name: Get latest nightly ref
      id: latest_ref
      run: |
        LATEST_RELEASE=$(curl -s https://cdn.openttd.org/openttd-nightlies/latest.yaml | grep "\- version: " | cut -b 12-)
        YEAR=$(echo "${LATEST_RELEASE}" | cut -b1-4)
        LATEST_REF=$(curl -s https://cdn.openttd.org/openttd-nightlies/${YEAR}/${LATEST_RELEASE}/changelog.md | head -n 3 | tail -n 1 | cut -d\  -f1)

        echo "Latest nightly ref: ${LATEST_REF}"
        echo "Current ref of master: ${GITHUB_SHA}"

        echo "latest_ref=${LATEST_REF}" >> $GITHUB_OUTPUT

  source:
    name: Source
    needs: latest-ref
    if: ${{ always() && (needs.latest-ref.result == 'skipped' || (needs.latest-ref.result == 'success' && !startsWith(github.sha, needs.latest-ref.outputs.latest_ref))) }}

    uses: ./.github/workflows/release-source.yml
    secrets: inherit

  docs:
    name: Docs
    needs: source

    uses: ./.github/workflows/release-docs.yml
    secrets: inherit

    with:
      version: ${{ needs.source.outputs.version }}

  linux:
    name: Linux (Generic)
    needs: source

    uses: ./.github/workflows/release-linux.yml
    secrets: inherit

    with:
      survey_key: ${{ needs.source.outputs.survey_key }}

  macos:
    name: MacOS
    needs: source

    uses: ./.github/workflows/release-macos.yml
    secrets: inherit

    with:
      survey_key: ${{ needs.source.outputs.survey_key }}

  windows:
    name: Windows
    needs: source

    uses: ./.github/workflows/release-windows.yml
    secrets: inherit

    with:
      is_tag: ${{ needs.source.outputs.is_tag }}
      survey_key: ${{ needs.source.outputs.survey_key }}

  windows-store:
    name: Windows Store
    needs:
    - source
    - windows

    if: needs.source.outputs.is_tag == 'true'

    uses: ./.github/workflows/release-windows-store.yml
    secrets: inherit

    with:
      version: ${{ needs.source.outputs.version }}

  upload:
    name: Upload
    needs:
    - source
    - docs
    - linux
    - macos
    - windows
    - windows-store

    # As windows-store is condition, we need to check ourselves if we need to run.
    # The always() makes sure the rest is always evaluated.
    if: always() && needs.source.result == 'success' && needs.docs.result == 'success' && needs.linux.result == 'success' && needs.macos.result == 'success' && needs.windows.result == 'success' && (needs.windows-store.result == 'success' || needs.windows-store.result == 'skipped')

    runs-on: ubuntu-latest

    # This job is empty, but ensures no upload job starts before all targets finished and are successful.
    steps:
    - name: Build completed
      run: |
        true

  upload-cdn:
    name: Upload (CDN)
    needs:
    - source
    - upload

    # As windows-store is condition, we need to check ourselves if we need to run.
    # The always() makes sure the rest is always evaluated.
    # Yes, you even need to do this if you yourself don't depend on the condition.
    if: always() && needs.source.result == 'success' && needs.upload.result == 'success'

    uses: ./.github/workflows/upload-cdn.yml
    secrets: inherit

    with:
      version: ${{ needs.source.outputs.version }}
      folder: ${{ needs.source.outputs.folder }}
      trigger_type: ${{ needs.source.outputs.trigger_type }}

  upload-steam:
    name: Upload (Steam)
    needs:
    - source
    - upload

    # As windows-store is condition, we need to check ourselves if we need to run.
    # The always() makes sure the rest is always evaluated.
    # Yes, you even need to do this if you yourself don't depend on the condition.
    # Additionally, only nightlies and releases go to Steam; not PRs.
    if: always() && needs.source.result == 'success' && needs.upload.result == 'success' && (needs.source.outputs.trigger_type == 'new-master' || needs.source.outputs.trigger_type == 'new-tag')

    uses: ./.github/workflows/upload-steam.yml
    secrets: inherit

    with:
      version: ${{ needs.source.outputs.version }}
      trigger_type: ${{ needs.source.outputs.trigger_type }}

  upload-gog:
    name: Upload (GOG)
    needs:
    - source
    - upload

    # As windows-store is condition, we need to check ourselves if we need to run.
    # The always() makes sure the rest is always evaluated.
    # Yes, you even need to do this if you yourself don't depend on the condition.
    # Additionally, only releases go to GOG; not nightlies or PRs.
    if: always() && needs.source.result == 'success' && needs.upload.result == 'success' && needs.source.outputs.trigger_type == 'new-tag'

    uses: ./.github/workflows/upload-gog.yml
    secrets: inherit

    with:
      version: ${{ needs.source.outputs.version }}
