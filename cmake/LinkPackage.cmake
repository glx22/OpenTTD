function(link_package NAME)
    cmake_parse_arguments(LP "ENCOURAGED" "TARGET" "INCLUDE" ${ARGN})

    if(${NAME}_FOUND)
        string(TOUPPER "${NAME}" UCNAME)
        add_definitions(-DWITH_${UCNAME})
        # Some libraries' cmake packages (looking at you, SDL2) leave trailing whitespace in the link commands,
        # which (later) cmake considers to be an error. Work around this with by stripping the incoming string.
        if((NOT LP_INCLUDE OR NOT (${LP_INCLUDE})) AND LP_TARGET AND TARGET ${LP_TARGET})
            string(STRIP "${LP_TARGET}" LP_TARGET)
            target_link_libraries(openttd ${LP_TARGET})
            message(STATUS "${NAME} found -- -DWITH_${UCNAME} -- ${LP_TARGET}")
        else()
            set(INCLUDES ${${NAME}_INCLUDE_DIRS} ${${NAME}_INCLUDE_DIR} ${${UCNAME}_INCLUDE_DIRS} ${${UCNAME}_INCLUDE_DIR})
            include_directories(${INCLUDES})
            if(NOT LP_INCLUDE OR NOT (${LP_INCLUDE}))
                string(STRIP "${${NAME}_LIBRARY}" ${NAME}_LIBRARY)
                string(STRIP "${${NAME}_LIBRARIES}" ${NAME}_LIBRARIES)
                string(STRIP "${${UCNAME}_LIBRARY}" ${UCNAME}_LIBRARY)
                string(STRIP "${${UCNAME}_LIBRARIES}" ${UCNAME}_LIBRARIES)
                set(LIBRARIES ${${NAME}_LIBRARIES} ${${NAME}_LIBRARY} ${${UCNAME}_LIBRARIES} ${${UCNAME}_LIBRARY})
                target_link_libraries(openttd ${LIBRARIES})
                message(STATUS "${NAME} found -- -DWITH_${UCNAME} -- ${INCLUDES} -- ${LIBRARIES}")
            else()
                message(STATUS "${NAME} found -- -DWITH_${UCNAME} -- ${INCLUDES}")
            endif()
        endif()
    elseif(LP_ENCOURAGED)
        message(WARNING "${NAME} not found; compiling OpenTTD without ${NAME} is strongly disencouraged")
    endif()
endfunction()
